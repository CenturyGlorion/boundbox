<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.boundbox</groupId>
		<artifactId>boundbox-parent</artifactId>
		<version>1.2.0</version>
	</parent>

	<artifactId>boundbox-library</artifactId>
	<packaging>jar</packaging>

	<properties>
		<java.version>1.6</java.version>
		<lombok.version>0.12.0</lombok.version>
		<commons-lang.version>3.1</commons-lang.version>
		<commons-io.version>1.3.2</commons-io.version>
		<easymock.version>3.2</easymock.version>
		<junit.version>4.11</junit.version>
		<javawriter.version>2.2.0</javawriter.version>
		<maven-compiler-plugin.version>2.5.1</maven-compiler-plugin.version>
		<jacoco-maven-plugin.version>0.6.3.201306030806</jacoco-maven-plugin.version>
		<maven-shade-plugin.version>2.1</maven-shade-plugin.version>

		<!-- feature flipping -->
		<log.level>Level.ALL</log.level>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>${lombok.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>${commons-lang.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-io</artifactId>
			<version>${commons-io.version}</version>
		</dependency>
		<dependency>
			<groupId>com.squareup</groupId>
			<artifactId>javawriter</artifactId>
			<version>${javawriter.version}</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.easymock</groupId>
			<artifactId>easymock</artifactId>
			<version>${easymock.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<sourceDirectory>src/main/java</sourceDirectory>
		<plugins>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven-compiler-plugin.version}</version>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
					<annotationProcessors>
						<annotationProcessor>lombok.core.AnnotationProcessor</annotationProcessor>
					</annotationProcessors>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>templating-maven-plugin</artifactId>
				<version>1.0-alpha-3</version>
				<executions>
					<execution>
						<id>filter-src</id>
						<goals>
							<goal>filter-sources</goal>
						</goals>
						<configuration>
							<!-- Note the two following parameters are the default one. These 
								are specified here just as a reminder. But as the Maven philosophy is strongly 
								about conventions, it's better to just not specify them. -->
							<sourceDirectory>${basedir}/src/main/java-templates</sourceDirectory>
							<outputDirectory>${project.build.directory}/generated-sources/java-templates</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- Uber jar -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<version>${maven-shade-plugin.version}</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
						<configuration>
							<minimizeJar>true</minimizeJar>
							<keepDependenciesWithProvidedScope>false</keepDependenciesWithProvidedScope>
							<shadedArtifactAttached>false</shadedArtifactAttached>
							<artifactSet>
								<includes>
									<include>org.apache.commons:*</include>
									<!-- This include is for Travis only -->
									<include>commons-io:*</include>
									<include>com.squareup:*</include>
								</includes>
							</artifactSet>
							<relocations>
								<relocation>
									<pattern>org.apache</pattern>
									<shadedPattern>org.shaded</shadedPattern>
								</relocation>
								<!-- This relocation is for Travis only -->
								<relocation>
									<pattern>commons-io</pattern>
									<shadedPattern>org.shaded</shadedPattern>
								</relocation>
								<relocation>
									<pattern>com.squareup</pattern>
									<shadedPattern>com.shaded</shadedPattern>
								</relocation>
							</relocations>
							<filters>
								<filter>
									<artifact>*:*</artifact>
									<excludes>
										<exclude>META-INF/license/**</exclude>
										<exclude>META-INF/*</exclude>
										<exclude>META-INF/maven/**</exclude>
										<exclude>LICENSE</exclude>
										<exclude>NOTICE</exclude>
										<exclude>/*.txt</exclude>
										<exclude>templates/**</exclude>
									</excludes>
								</filter>
							</filters>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.codehaus.mojo
										</groupId>
										<artifactId>
											templating-maven-plugin
										</artifactId>
										<versionRange>
											[1.0-alpha-3,)
										</versionRange>
										<goals>
											<goal>filter-sources</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<profiles>
		<profile>
			<id>release</id>
			<properties>
				<log.level>Level.OFF</log.level>
			</properties>
		</profile>

		<profile>
			<id>coveralls</id>
			<activation>
				<property>
					<name>skipTests</name>
					<value>false</value>
				</property>
			</activation>
			<build>
				<plugins>
					<!-- CODE COVERAGE FOR UNIT-TESTS http://www.javacodegeeks.com/2013/08/creating-code-coverage-reports-for-unit-and-integration-tests-with-the-jacoco-maven-plugin.html -->
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
						<version>${jacoco-maven-plugin.version}</version>
						<configuration>
							<excludes>
								<exclude>**/*Exception.class</exclude>
							</excludes>
						</configuration>
						<executions>
							<!-- Prepares the property pointing to the JaCoCo runtime agent which 
								is passed as VM argument when Maven the Surefire plugin is executed. -->
							<execution>
								<id>pre-unit-test</id>
								<goals>
									<goal>prepare-agent</goal>
								</goals>
								<configuration>
									<!-- Sets the path to the file which contains the execution data. -->
									<destFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</destFile>
								</configuration>
							</execution>
							<!-- Ensures that the code coverage report for unit tests is created 
								after unit tests have been run. -->
							<execution>
								<id>post-unit-test</id>
								<phase>test</phase>
								<goals>
									<goal>report</goal>
								</goals>
								<configuration>
									<!-- Sets the path to the file which contains the execution data. -->
									<dataFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</dataFile>
									<!-- Sets the output directory for the code coverage report. -->
									<outputDirectory>${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.eluder.coveralls</groupId>
						<artifactId>coveralls-maven-plugin</artifactId>
						<version>2.0.1</version>
						<executions>
							<execution>
								<id>post-unit-test</id>
								<phase>test</phase>
								<goals>
									<goal>jacoco</goal>
								</goals>
								<configuration>
									<coverageFile>${project.reporting.outputDirectory}/jacoco-ut/jacoco.xml</coverageFile>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
